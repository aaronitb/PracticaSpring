package cat.itb.projectespring.security;import cat.itb.projectespring.model.servicio.UserDetailsService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.security.crypto.password.PasswordEncoder;@Configuration@EnableWebSecuritypublic class SeguridadWeb extends WebSecurityConfigurerAdapter {    @Autowired    private UserDetailsService servicioUsuarios;    public PasswordEncoder passwordEncoder() {        return new BCryptPasswordEncoder();    }    @Override    protected void configure(AuthenticationManagerBuilder auth) throws Exception{        auth.userDetailsService(servicioUsuarios)                .passwordEncoder(passwordEncoder());    }    @Override    protected void configure(HttpSecurity http) throws Exception {        http.authorizeRequests()                .antMatchers("/", "/registration", "/error", "/afegir", "/errorPermisos").permitAll()                .antMatchers("/update/**", "/delete/**").hasRole("ADMIN")                .anyRequest().authenticated()                .and()                .formLogin()                .permitAll()                .and()                .logout()                .logoutSuccessUrl("/login")                .permitAll();    }}